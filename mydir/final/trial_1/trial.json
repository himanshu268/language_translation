{"trial_id": "1", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "units0", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation0", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units1", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation1", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units2", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation2", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units3", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation3", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units4", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation4", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units5", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation5", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}, {"class_name": "Int", "config": {"name": "units6", "default": null, "conditions": [], "min_value": 8, "max_value": 128, "step": 8, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation6", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid"], "ordered": false}}], "values": {"num_layers": 7, "units0": 16, "activation0": "tanh", "units1": 72, "activation1": "tanh", "units2": 56, "activation2": "sigmoid", "units3": 104, "activation3": "relu", "units4": 8, "activation4": "relu", "units5": 8, "activation5": "relu", "units6": 8, "activation6": "relu"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\rajpu\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\nn.py\", line 587, in categorical_crossentropy\n    raise ValueError(\nValueError: Arguments `target` and `output` must have the same shape. Received: target.shape=(None, 1), output.shape=(None, 22)\n"}